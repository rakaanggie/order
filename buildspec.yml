version: 0.2

env:
  variables:
    ECR_IMAGE: lks-order-image
    ECR_REGION: us-east-1
    CONTAINER_NAME: lks-order-container
    AWS_DYNAMODB_TABLE_PROD: lks-order-production
    AWS_REGION: us-east-1
    AWS_DYNAMODB_TABLE_TEST: lks-order-testing

phases:
  install:
    runtime-versions:
      nodejs: 18
  pre_build:
    commands:
      - echo "install dependencies and login into ECR"
      - aws ecr get-login-password --region ${ECR_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com
      - ECR_REPO=${AWS_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com/${ECR_IMAGE}:${IMAGE_TAG}
      - echo "AWS_ACCESS_KEY=${AWS_ACCESS_KEY}" >> .env.production
      - echo "AWS_SECRET_KEY=${AWS_SECRET_KEY}" >> .env.production
      - echo "AWS_DYNAMODB_TABLE_PROD=${AWS_DYNAMODB_TABLE_PROD}" >> .env.production
      - echo "AWS_REGION=${AWS_REGION}" >> .env.production
      - echo "AWS_ACCESS_KEY=${AWS_ACCESS_KEY}" >> .env.testing
      - echo "AWS_SECRET_KEY=${AWS_SECRET_KEY}" >> .env.testing
      - echo "AWS_DYNAMODB_TABLE_TEST=${AWS_DYNAMODB_TABLE_TEST}" >> .env.testing
      - echo "AWS_REGION=${AWS_REGION}" >> .env.testing
  build:
    commands:
      - echo "Run unit testing and build docker image"
      - npm install
      - npm run test
      - docker build -t ${AWS_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com/${ECR_IMAGE}:${IMAGE_TAG} .
  post_build:
    commands:
      - echo "Push image to ECR"
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com/${ECR_IMAGE}:${IMAGE_TAG}
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME ${ECR_REPO} > imagedefinitions.json
      - printf '{"AWSEBDockerrunVersion":"1","Image":{"Name":"405040917563.dkr.ecr.us-east-1.amazonaws.com/lks-order-image:latest","Update":"true"},"Ports":[{"ContainerPort":8000,"HostPort":80}]}' > Dockerrun.aws.json
      - echo "complete"

reports:
  test-report:
    files: 'report/test-result.xml'
    file-format: JUNITXML

artifacts:
  files:
    - imagedefinitions.json
    - Dockerrun.aws.json
